<?php
/**
 * The config file is responsible to make class loading work and initialize a
 * DocumentManagerHelper that contains the doctrine document manager with a
 * Session of your phcpr implementation.
 * The array $extraCommands can be used to inject implementation specific commands.
 */

$vendorDir = __DIR__.'/lib/vendor';
/**
 * Add instances of commands for eventual implementation specific commands to this array.
 */
$extraCommands = array();

require_once $vendorDir.'/jackalope/lib/phpcr-utils/lib/vendor/Symfony/Component/ClassLoader/UniversalClassLoader.php';
$classLoader = new \Symfony\Component\ClassLoader\UniversalClassLoader();
$classLoader->register();

$classLoader->registerNamespaces(array(
    'Doctrine\ODM' => dirname($vendorDir),
    'Doctrine\Common' => $vendorDir.'/doctrine-common/lib',
    'Symfony' => $vendorDir,
    'PHPCR' => array($vendorDir.'/jackalope/lib/phpcr/src', $vendorDir.'/jackalope/lib/phpcr-utils/src'),
));

$session = initJackalopeJackrabbit();
//$session = initJackalopeDoctrineDbal();

/* prepare the doctrine configuration */
$config = new \Doctrine\ODM\PHPCR\Configuration();

$dm = \Doctrine\ODM\PHPCR\DocumentManager::create($session, $config);

$helperSet = new \Symfony\Component\Console\Helper\HelperSet(array(
    'dm' => new \Doctrine\ODM\PHPCR\Tools\Console\Helper\DocumentManagerHelper(null, $dm)
));


//// functions for loading your phpcr implementation ////

/** for jackalope with jackrabbit, do this */
function initJackalopeJackrabbit()
{
    global $classLoader, $vendorDir, $extraCommands;
    $classLoader->registerNamespaces(array(
        'Jackalope'=> $vendorDir.'/jackalope/src',
    ));

    $extraCommands[] = new \Jackalope\Tools\Console\Command\JackrabbitCommand();

    /* credentials you plan to use */
    $url = 'http://127.0.0.1:8080/server/';
    $workspace = 'default';
    $user = 'admin';
    $pass = 'admin';

    /* bootstrapping the repository implementation. for jackalope, do this: */
    $repository = \Jackalope\RepositoryFactoryJackrabbit::getRepository(array("jackalope.jackrabbit_uri" => $url));
    $credentials = new \PHPCR\SimpleCredentials($user, $pass);
    return $repository->login($credentials, $workspace);
}

/** for jackalope with doctrine dbal, do this */
function initJackalopeDoctrineDbal()
{
    global $classLoader, $vendorDir, $extraCommands;
    $classLoader->registerNamespaces(array(
        'Jackalope'=> $vendorDir.'/jackalope/src',
        'Doctrine\DBAL'=> $vendorDir.'/jackalope/lib/vendor/doctrine-dbal',
    ));

    $extraCommands[] = new \Jackalope\Tools\Console\Command\InitDoctrineDbalCommand();

    /* additional doctrine dbal configuration */
    $driver   = 'pdo_mysql';
    $host     = 'localhost';
    $database = 'jackalope';
    $user = 'root';
    $pass = '';

    // Bootstrap Doctrine
    $dbConn = \Doctrine\DBAL\DriverManager::getConnection(array(
        'driver'    => $driver,
        'host'      => $host,
        'user'      => $user,
        'password'  => $pass,
        'dbname'    => $database,
    ));

    $repository = \Jackalope\RepositoryFactoryDoctrineDBAL::getRepository(array('jackalope.doctrine_dbal_connection' => $dbConn));
    $credentials = new \PHPCR\SimpleCredentials(null, null);
    return $repository->login($credentials, $workspace);
}
